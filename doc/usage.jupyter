nbformat 4
nbformat_minor 0
markdown
    # Usage
    
    Install `nbsphinx` with [pip](https://pip.pypa.io/en/latest/installing/):
    
        pip install nbsphinx --user
    
    In the directory with your notebook files, run this command (assuming you have [Sphinx](http://sphinx-doc.org/) installed already):
    
        sphinx-quickstart
        
    Answer the questions that appear on the screen. In case of doubt, just press the `<Return>` key to take the default values.
    
    After that, there will be a few brand-new files in the current directory.
    You'll have to make a few changes to the file `conf.py`. You should at least check if those two variables contain the right things:
    
    ```python
    extensions = [
        'nbsphinx',
        'sphinx.ext.mathjax',
    ]
    exclude_patterns = ['_build', '**.ipynb_checkpoints']
    ```
    
    Once your `conf.py` is in place, edit the file `index.rst` and add the file names of your notebooks (without the `.ipynb` extension) to the `toctree` directive.
    
    To create the HTML pages, use this command:
    
        sphinx-build <source-dir> <build-dir>
        
    If you have many notebooks, you can do a parallel build by using the `-j` option:
    
        sphinx-build <source-dir> <build-dir> -j<number-of-processes>
    
    For example, if your source files are in the current directory and you have 4 CPU cores, you can run this:
    
        sphinx-build . _build -j4
        
    Afterwards, you can find the main HTML file in `_build/index.html`.
    
    To create LaTeX output, use:
    
        sphinx-build <source-dir> <build-dir> -b latex
        
    Subsequent builds will be faster, because only those source files which have changed will be re-built.
    To force re-building all source files, use the `-E` option.
markdown
    ## Automatic Creation of HTML and PDF output on readthedocs.org
    
    This is very easy!
    
    1. Create an account on https://readthedocs.org/ and add your Github/Bitbucket repository (or any publicly available Git/Subversion/Mercurial/Bazaar repository).
    
    1. Create a file named `requirements.txt` (or whatever name you wish) in your repository containing the required pip packages:
    
            nbsphinx
            ipykernel
    
    1. In the "Advanced Settings" on readthedocs.org, specify your `requirements.txt` file (or however you called it) in the box labelled "Requirements file". Kinda obvious, isn't it?
    
    1. Still in the "Advanced Settings", make sure the right Python interpreter is chosen.  This must be the same version (2.x or 3.x) as you were using in your notebooks!
    
    1. Make sure that in the "Settings" of your Github repository, under "Webhooks & services", "ReadTheDocs" is listed and activated in the "Services" section. If not, use "Add service".
        There is probably a similar thing for Bitbucket.
    
    1. Done!
    
    After that, you only have to "push" to your repository and the HTML pages and the PDF file of your stuff are automagically created on readthedocs.org. Awesome!
    
    You can even have different versions of your stuff, just use Git tags and branches and select in the readthedocs.org settings (under "Admin", "Versions") which of those should be created.
markdown
    ## HTML Themes
    
    The `nbsphinx` extension does *not* provide its own theme, you can use any of the available themes or create a custom one, if you feel like it.
    
    Here are a few examples how the `nbsphinx` input and output cells look like in different themes:
    
    http://nbsphinx.readthedocs.org/en/readthedocs-theme/
    
    http://nbsphinx.readthedocs.org/en/alabaster-theme/
    
    http://nbsphinx.readthedocs.org/en/bootstrap-theme/
    
    http://nbsphinx.readthedocs.org/en/cloud-theme/
    
    http://nbsphinx.readthedocs.org/en/py3doc-enhanced-theme/
metadata
    {
     "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
     },
     "language_info": {
      "codemirror_mode": {
       "name": "ipython",
       "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.4.4"
     }
    }
