nbformat 4
nbformat_minor 2
markdown
    # Custom Notebook Formats
    
    The Jupyter Notebook application allows extensions to use a custom notebook format
    other than the native Jupyter format used in `*.ipynb` files.
    Such extensions can customize the so-called "contents manager"
    which is responsible for reading and writing the files used by Jupyter.
    
    One example for such an extension is [jupytext](https://github.com/mwouts/jupytext),
    which allows the use of Markdown, R-Markdown as well as plain Julia, Python and R files.
    
    If it provides the necessary metadata, such a "contents manager" can also be used by `nbsphinx`.
    To use a custom "contents manager", you have to select it in your `conf.py` file
    (and of course you have to install the extension, too):
    
    ```python
    nbsphinx_contents_manager = 'jupytext.TextFileContentsManager'
    ```
    
    In addition, you have to register the file extension(s) you want to use
    (for example `.Rmd`) as having the type `jupyter_notebook`:
    
    ```python
    source_suffix = {
        '.Rmd': 'jupyter_notebook',
        '.rst': 'restructuredtext',
    }
    ```
    
    With such a setup you should be able to use notebooks with custom formats
    just like `*.ipynb` files.
    
    <div class="alert alert-info">
    
    **Note:**
    
    Using `nbsphinx_contents_manager` makes it impossible to use
    the Sphinx translation machinery at the same time.
    
    </div>
metadata
    {
     "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
     },
     "language_info": {
      "codemirror_mode": {
       "name": "ipython",
       "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.7"
     }
    }
