nbformat 4
nbformat_minor 0
markdown
    # An Example Notebook
    
    This notebook is meant for testing conversion to other formats.
    
    It contains Markdown cells and code cells with different kinds of outputs.
markdown
    ## Markdown
    
    We can write *in italics* (same _with underscores_), **in boldface** (same __with undescores__) and ~~strikethrough~~.
    We also can write `preformatted text`.
    
    ### Equations
    
    Equations can be formatted really nicely, either inline, like $\text{e}^{i\pi} = -1$, or on a separate line, like
    
    $$
    \int_{-\infty}^\infty f(x) \delta(x - x_0) dx = f(x_0)
    $$
    
    ### Code
    
    We can also write code with nice syntax highlighting:
    
    ```python
    print("Hello, world!")
    ```
    
    ### Tables
    
    title1 | title2
    -------|-------
    data1  | data2
    data3  | data4
    data5  | data6
    
    ### Images
    
    Jupyter notebook icon (local): ![Jupyter notebook icon](images/notebook_icon.png)
    
    Python logo (local): ![Python logo](images/python_logo.svg)
    
    Jupyter logo (remote): ![Jupyter logo (remote)](http://jupyter.org/assets/nav_logo.svg)
    
    Python logo (remote): ![Python logo (remote)](https://www.python.org/static/img/python-logo-large.png)
markdown
    ## Code Cells
    
    An empty code cell:
code
    
  metadata
    {
     "collapsed": true
    }
markdown
    A cell with no output:
code
    None
  metadata
    {
     "collapsed": true
    }
markdown
    A simple output:
code
    6 * 7
  metadata
    {
     "collapsed": false
    }
markdown
    The standard output stream:
code
    print('Hello, world!')
  metadata
    {
     "collapsed": false
    }
markdown
    Normal output + standard output
code
    print('Hello, world!')
    6 * 7
  metadata
    {
     "collapsed": false
    }
markdown
    The standard error stream is highlighted and displayed just below the code cell.
    The standard output stream comes afterwards (with no special highlighting).
    Finally, the "normal" output is displayed.
code
    import logging
    logging.warning('I am a warning and I will appear on the standard error stream')
    print('I will appear on the standard output stream')
    'I am the "normal" output'
  metadata
    {
     "collapsed": false
    }
markdown
    ## Special Display Formats
    
    See [IPython example notebook](https://nbviewer.jupyter.org/github/ipython/ipython/blob/master/examples/IPython Kernel/Rich Output.ipynb).
    
    TODO: tables? e.g. Pandas DataFrame?
code
    from IPython.display import display, Image, SVG, Math, YouTubeVideo
  metadata
    {
     "collapsed": false
    }
markdown
    ### Local Image Files
code
    i = Image(filename='images/notebook_icon.png')
    i
  metadata
    {
     "collapsed": false
    }
code
    display(i)
  metadata
    {
     "collapsed": false
    }
markdown
    For some reason this doesn't work with `Image(...)`:
code
    SVG(filename='images/python_logo.svg')
  metadata
    {
     "collapsed": false
    }
markdown
    ### Image URLs
code
    Image(url='https://www.python.org/static/img/python-logo-large.png')
  metadata
    {
     "collapsed": false
    }
code
    Image(url='https://www.python.org/static/img/python-logo-large.png', embed=True)
  metadata
    {
     "collapsed": false
    }
code
    Image(url='http://jupyter.org/assets/nav_logo.svg')
  metadata
    {
     "collapsed": false
    }
code
    Image(url='https://www.python.org/static/favicon.ico')
  metadata
    {
     "collapsed": false
    }
code
    Image(url='http://python.org/images/python-logo.gif')
  metadata
    {
     "collapsed": false
    }
markdown
    ### Math
code
    eq = Math(r"\int_{-\infty}^\infty f(x) \delta(x - x_0) dx = f(x_0)")
    eq
  metadata
    {
     "collapsed": false
    }
code
    display(eq)
  metadata
    {
     "collapsed": false
    }
code
    %%latex
    \begin{equation}
    \int_{-\infty}^\infty f(x) \delta(x - x_0) dx = f(x_0)
    \end{equation}
  metadata
    {
     "collapsed": false
    }
code
    YouTubeVideo('iV2ViNJFZC8')
  metadata
    {
     "collapsed": false
    }
markdown
    ## Raw Cells
raw
    TODO: a meaningful example for raw cells!
metadata
    {
     "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
     },
     "language_info": {
      "codemirror_mode": {
       "name": "ipython",
       "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.4.3+"
     }
    }
